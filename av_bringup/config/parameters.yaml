frames:
  frame_id: "world"
  base_frame_id: "igus_rebel_base_link"
  realsense_frame_id: "container_realsense_link"
  realsense_base_frame_id: "camera_color_optical_frame"
  gazebo_ignition_camera_frame_id: "igus_rebel/link_8/depth_camera"
  realsense_camera_frame_id: "camera_color_optical_frame"

topics:
  gazebo_ignition_input_data:
    depth_image_topic: "/virtual_camera_link/rgbd_camera/depth_image"
    depth_image_camera_info_topic: "/virtual_camera_link/rgbd_camera/camera_info"
    rgb_image_topic: "/virtual_camera_link/rgbd_camera/image_raw"

  realsense_input_data:
    depth_image_topic: "/camera/camera/aligned_depth_to_color/image_raw"
    depth_image_camera_info_topic: "/camera/camera/aligned_depth_to_color/camera_info"
    rgb_image_topic: "/camera/camera/color/image_raw"
  
  segmentation:
    color_filter:
      rgb_image_topic: &color_filter_rgb_image_topic "/active_vision/segmentation/color_filter/rgb_image"
      depth_image_topic: &color_filter_depth_image_topic "/active_vision/segmentation/color_filter/depth_image"
      depth_image_camera_info_topic: &color_filter_depth_image_camera_info_topic "/active_vision/segmentation/color_filter/camera_info"
      tf_topic: &color_filter_tf_topic "/active_vision/segmentation/color_filter/tf"
      octomap_semantic_class_cells_vis_topic: &color_filter_octomap_semantic_class_cells_vis_topic "/active_vision/octomap/color_filter/semantic_class_cells_vis"

    lang_sam:
      rgb_image_topic: &lang_sam_rgb_image_topic "/active_vision/segmentation/lang_sam/rgb_image"
      rgb_images_array_topic: &lang_sam_rgb_images_array_topic "/active_vision/segmentation/lang_sam/rgb_images_array"
      depth_image_topic: &lang_sam_depth_image_topic "/active_vision/segmentation/lang_sam/depth_image"
      depth_image_camera_info_topic: &lang_sam_depth_image_camera_info_topic "/active_vision/segmentation/lang_sam/camera_info"
      confidences_topic: &lang_sam_confidences_topic "/active_vision/segmentation/lang_sam/confidences"
      tf_topic: &lang_sam_tf_topic "/active_vision/segmentation/lang_sam/tf"
      octomap_semantic_class_cells_vis_topic: &lang_sam_octomap_semantic_class_cells_vis_topic "/active_vision/octomap/lang_sam/semantic_class_cells_vis"
      octomap_confidence_cells_vis_topic: &lang_sam_octomap_confidence_cells_vis_topic "/active_vision/octomap/lang_sam/confidence_cells_vis"
      octomap_instances_cells_vis_topic: &lang_sam_octomap_instances_cells_vis_topic "/active_vision/octomap/lang_sam/instances_cells_vis"
    
    yolo_world:
      rgb_image_topic: &yolo_world_rgb_image_topic "/active_vision/segmentation/yolo_world/rgb_image"
      rgb_images_array_topic: &yolo_world_rgb_images_array_topic "/active_vision/segmentation/yolo_world/rgb_images_array"
      depth_image_topic: &yolo_world_depth_image_topic "/active_vision/segmentation/yolo_world/depth_image"
      depth_image_camera_info_topic: &yolo_world_depth_image_camera_info_topic "/active_vision/segmentation/yolo_world/camera_info"
      confidences_topic: &yolo_world_confidences_topic "/active_vision/segmentation/yolo_world/confidences"
      tf_topic: &yolo_world_tf_topic "/active_vision/segmentation/yolo_world/tf"
      octomap_semantic_class_cells_vis_topic: &yolo_world_octomap_semantic_class_cells_vis_topic "/active_vision/octomap/yolo_world/semantic_class_cells_vis"
      octomap_confidence_cells_vis_topic: &yolo_world_octomap_confidence_cells_vis_topic "/active_vision/octomap/yolo_world/confidence_cells_vis"
      octomap_instances_cells_vis_topic: &yolo_world_octomap_instances_cells_vis_topic "/active_vision/octomap/yolo_world/instances_cells_vis"

  pointcloud:
    pointcloud_topic: &pointcloud_topic "/active_vision/pointcloud/pointcloud"
    segmented_pointcloud_topic: &segmented_pointcloud_topic "/active_vision/pointcloud/segmented_pointcloud"
    segmented_pointclouds_array_topic: &segmented_pointclouds_array_topic "/active_vision/pointcloud/segmented_pointclouds_array"

  octomap:
    octomap_occupied_cells_vis_topic: &octomap_occupied_cells_vis_topic "/active_vision/octomap/occupied_cells_vis"
    octomap_free_cells_vis_topic: &octomap_free_cells_vis_topic "/active_vision/octomap/free_cells_vis"
    octomap_occupied_cells_centers_pointcloud_topic: &octomap_occupied_cells_centers_pointcloud_topic "/active_vision/octomap/occupied_cells_centers_pointcloud"
    octomap_binary_topic: &octomap_binary_topic "/active_vision/octomap/octomap_binary"
    octomap_full_topic: &octomap_full_topic "/active_vision/octomap/octomap_full"
    octomap_projected_map_topic: &octomap_projected_map_topic "/active_vision/octomap/projected_map"
  

launch:
  realsense_launch:
    enable_rgbd: "true"
    enable_sync: "true"
    align_depth.enable: "true"
    enable_color: "true"
    enable_depth: "true"
    pointcloud.enable: "false"
    clip_distance: "1.0"

  
  octomap_normal_launch:     
    extended_octomap_creation_launch:
      resolution: '0.006'
      height_map: "False"
      colored_map: "False"
      color_factor: "0.8"
      filter_ground: 'False'
      filter_speckles: "False"
      ground_filter/distance: "0.04"
      ground_filter/angle: "0.15"
      ground_filter/plane_distance: "0.07"
      compress_map: "True"
      incremental_2D_projection: "False"
      # pointcloud_max_x: "1.1" # represents the world x max positive values that will be considered and inserted into the octomap.
      # pointcloud_min_x: "1.0" # represents the world x min positive values that will be considered and inserted into the octomap.
      # pointcloud_max_y: "1.7" # represents the world y max positive values that will be considered and inserted into the octomap.
      # pointcloud_min_y: "1.6" # represents the world y min positive values that will be considered and inserted into the octomap.
      pointcloud_max_z: "3.00" # represents the world z max positive values that will be considered and inserted into the octomap.
      pointcloud_min_z: "0.10" # represents the world z min positive values that will be considered and inserted into the octomap. Keep -0.28 if the base is used, 0.10 if not. With real robot base, keep at -0.20
      sensor_model/max_range: "-1.0"
      sensor_model/hit: "0.7"
      sensor_model/miss: "0.4"
      sensor_model/min: "0.12"
      sensor_model/max: "0.97"
      color/r: "1.0"
      color/g: "1.0"
      color/b: "1.0"
      color/a: "1.0"
      color_free/r: "0.0"
      color_free/g: "0.0"
      color_free/b: "1.0"
      color_free/a: "1.0"
      process_free_space: "False"
      publish_free_space: "False"
      publish_free_cells: "False"
      publish_octomap_binary: "False"
      publish_octomap_full: "False"
      publish_centers_pointcloud: "False"
      publish_2d_projected_map: "False"
      segmented_pointcloud_subscription: 'False'
      segmented_pointclouds_array_subscription: 'False'
      message_filter_queue: '200'
    
    rviz:
      ignition: "octomap_normal_ignition.rviz"
      realsense: "octomap_normal_realsense.rviz"
      real: "octomap_normal.rviz"



  octomap_segmentation_color_filter_launch: 
    color_filter_segmentation_launch:
      publish_original_depth_image: "True"
      publish_original_depth_image_camera_info: "True"
      publish_original_tf: "True"
      color: "red"
    
    segmented_pointcloud_creation_launch:
      publish_pointclouds_array: "False"
      publish_single_pointcloud: "True"
    
    extended_octomap_creation_launch:
      resolution: '0.006' # for real scenarion better to use at least 0.015, for simulation 0.006
      height_map: "False"
      colored_map: "False"
      color_factor: "0.8"
      filter_ground: 'False'
      filter_speckles: "False"
      ground_filter/distance: "0.04"
      ground_filter/angle: "0.15"
      ground_filter/plane_distance: "0.07"
      compress_map: "True"
      incremental_2D_projection: "False"
      # pointcloud_max_x: "1.1" # represents the world x max positive values that will be considered and inserted into the octomap.
      # pointcloud_min_x: "1.0" # represents the world x min positive values that will be considered and inserted into the octomap.
      # pointcloud_max_y: "1.7" # represents the world y max positive values that will be considered and inserted into the octomap.
      # pointcloud_min_y: "1.6" # represents the world y min positive values that will be considered and inserted into the octomap.
      pointcloud_max_z: "3.00" # represents the world z max positive values that will be considered and inserted into the octomap.
      pointcloud_min_z: "0.10" # represents the world z min positive values that will be considered and inserted into the octomap. Keep -0.28 if the base is used, 0.10 if not. With real robot base, keep at -0.20
      sensor_model/max_range: "-1.0"
      sensor_model/hit: "0.7"
      sensor_model/miss: "0.4"
      sensor_model/min: "0.12"
      sensor_model/max: "0.97"
      color/r: "1.0"
      color/g: "1.0"
      color/b: "1.0"
      color/a: "1.0"
      color_free/r: "0.0"
      color_free/g: "0.0"
      color_free/b: "1.0"
      color_free/a: "1.0"
      process_free_space: "False"
      publish_free_space: "False"
      publish_free_cells: "False"
      publish_octomap_binary: "False"
      publish_octomap_full: "False"
      publish_centers_pointcloud: "False"
      publish_2d_projected_map: "False"
      publish_confidence: 'False'
      publish_semantic: 'True'
      publish_instances: 'False'
      partial_pointcloud_subscription: 'True'
      segmented_pointcloud_subscription: 'True'
      segmented_pointclouds_array_subscription: 'False'
      message_filter_queue: '100'
      insert_cloud_init: 'True'
      insert_segmented_init: 'True'
    
    rviz:
      ignition: "octomap_segmentation_color_filter_ignition.rviz"
      realsense: "octomap_segmentation_color_filter_realsense.rviz"
      real: "octomap_segmentation_color_filter.rviz"
  


  octomap_segmentation_lang_sam_launch: 
    lang_sam_segmentation_launch:
      approach: "pub_sub"
      sam_model_type: "vit_b"
      publish_masks_array: "True"
      segmentation_prompt: "tomato"
      publish_original_depth_image: "True"
      publish_original_depth_image_camera_info: "True"
      publish_original_tf: "True"

    segmented_pointcloud_creation_launch:
      publish_pointclouds_array: "True"
      publish_single_pointcloud: "True" # Set to true if partial pointcloud is needed
    
    extended_octomap_creation_launch:
      resolution: '0.006' # for real scenarion better to use at least 0.015, for simulation 0.006
      height_map: "False"
      colored_map: "False"
      color_factor: "0.8"
      filter_ground: 'False'
      filter_speckles: "False"
      ground_filter/distance: "0.04"
      ground_filter/angle: "0.15"
      ground_filter/plane_distance: "0.07"
      compress_map: "True"
      incremental_2D_projection: "False"
      # pointcloud_max_x: "1.1" # represents the world x max positive values that will be considered and inserted into the octomap.
      # pointcloud_min_x: "1.0" # represents the world x min positive values that will be considered and inserted into the octomap.
      # pointcloud_max_y: "1.7" # represents the world y max positive values that will be considered and inserted into the octomap.
      # pointcloud_min_y: "1.6" # represents the world y min positive values that will be considered and inserted into the octomap.
      pointcloud_max_z: "3.00" # represents the world z max positive values that will be considered and inserted into the octomap.
      pointcloud_min_z: "0.10" # represents the world z min positive values that will be considered and inserted into the octomap. Keep -0.28 if the base is used, 0.10 if not. With real robot base, keep at -0.20
      sensor_model/max_range: "-1.0"
      sensor_model/hit: "0.7"
      sensor_model/miss: "0.4"
      sensor_model/min: "0.12"
      sensor_model/max: "0.97"
      color/r: "1.0"
      color/g: "1.0"
      color/b: "1.0"
      color/a: "1.0"
      color_free/r: "0.0"
      color_free/g: "0.0"
      color_free/b: "1.0"
      color_free/a: "1.0"
      process_free_space: "False"
      publish_free_space: "False"
      publish_free_cells: "False"
      publish_octomap_binary: "False"
      publish_octomap_full: "False"
      publish_centers_pointcloud: "False"
      publish_2d_projected_map: "False"
      publish_confidence: 'True'
      publish_semantic: 'True'
      publish_instances: 'True'
      partial_pointcloud_subscription: 'True'
      segmented_pointcloud_subscription: 'False'
      segmented_pointclouds_array_subscription: 'True'
      message_filter_queue: '200'
      insert_cloud_init: 'True'
      insert_segmented_init: 'True'
      segmented_pointcloud_outlier_removal: "True"
      use_frequency_threshold: "False" # useful with real robot
      frequency_threshold: "0.50" # an instance will be put in blank even if only the %threshold/2 overlaps with another portion of the instance
      outlier_detection: "True" # Slow when the full octomap and not partial is used
      search_neighboorhood_ray: "5"
      correction_neighboorhood_ray: "3"
      outlier_threshold: "0.2"
    
    rviz:
      ignition: "octomap_segmentation_lang_sam_ignition.rviz"
      realsense: "octomap_segmentation_lang_sam_realsense.rviz"
      real: "octomap_segmentation_lang_sam.rviz"



  octomap_segmentation_yolo_world_launch: 
    yolo_world_segmentation_launch:
      publish_masks_array: "True"
      publish_original_depth_image: "True"
      publish_original_depth_image_camera_info: "True"
      publish_original_tf: "True"
      model_path: "/home/michelelagreca/Documents/robotics"
      yolo_world_model_type: "yolo_world/l"
      efficient_SAM_model_type: "l0"
      segmentation_prompt: "tomato" 
      confidence_threshold: "0.001" # for apple: 0.15, for tomato (sim): 0.001. Change to find more accurate instances
      nms_threshold: "0.2" # for apple: 0.7, for tomato (sim): 0.2. Change to find more accurate instances
      confidence_normalization: "True"

    segmented_pointcloud_creation_launch:
      publish_pointclouds_array: "True"
      publish_single_pointcloud: "True" # Set to true if partial pointcloud is needed
    
    extended_octomap_creation_launch:
      resolution: '0.006' # for real scenarion better to use at least 0.015, for simulation 0.006
      height_map: "False"
      colored_map: "False"
      color_factor: "0.8"
      filter_ground: 'False'
      filter_speckles: "False"
      ground_filter/distance: "0.04"
      ground_filter/angle: "0.15"
      ground_filter/plane_distance: "0.07"
      compress_map: "True"
      incremental_2D_projection: "False"
      # pointcloud_max_x: "1.1" # represents the world x max positive values that will be considered and inserted into the octomap.
      # pointcloud_min_x: "1.0" # represents the world x min positive values that will be considered and inserted into the octomap.
      # pointcloud_max_y: "1.7" # represents the world y max positive values that will be considered and inserted into the octomap.
      # pointcloud_min_y: "1.6" # represents the world y min positive values that will be considered and inserted into the octomap.
      pointcloud_max_z: "3.00" # represents the world z max positive values that will be considered and inserted into the octomap.
      pointcloud_min_z: "0.10" # represents the world z min positive values that will be considered and inserted into the octomap. Keep -0.28 if the base is used, 0.10 if not. With real robot base, keep at -0.20
      sensor_model/max_range: "-1.0"
      sensor_model/hit: "0.7"
      sensor_model/miss: "0.4"
      sensor_model/min: "0.12"
      sensor_model/max: "0.97"
      color/r: "1.0"
      color/g: "1.0"
      color/b: "1.0"
      color/a: "1.0"
      color_free/r: "0.0"
      color_free/g: "0.0"
      color_free/b: "1.0"
      color_free/a: "1.0"
      process_free_space: "False"
      publish_free_space: "False"
      publish_free_cells: "False"
      publish_octomap_binary: "False"
      publish_octomap_full: "False"
      publish_centers_pointcloud: "False"
      publish_2d_projected_map: "False"
      publish_confidence: 'True'
      publish_semantic: 'True'
      publish_instances: 'True'
      partial_pointcloud_subscription: 'True'
      segmented_pointcloud_subscription: 'False'
      segmented_pointclouds_array_subscription: 'True'
      message_filter_queue: '200'
      insert_cloud_init: 'True'
      insert_segmented_init: 'True'
      segmented_pointcloud_outlier_removal: "True"
      use_frequency_threshold: "True" # useful with real robot
      frequency_threshold: "0.50" # an instance will be put in blank even if only the %threshold/2 overlaps with another portion of the instance
      outlier_detection: "True" # Slow when the full octomap and not partial is used
      search_neighboorhood_ray: "5"
      correction_neighboorhood_ray: "3"
      outlier_threshold: "0.2"
    
    rviz:
      ignition: "octomap_segmentation_yolo_world_ignition.rviz"
      realsense: "octomap_segmentation_yolo_world_realsense.rviz"
      real: "octomap_segmentation_yolo_world.rviz"


  active_vision_pipeline_launch:
    centralized_architecture: "True"  
    yolo_world_server:
      publish_masks_array: "True"
      yolo_world_model_type: "yolo_world/l"
      efficient_SAM_model_type: "l0"
      confidence_normalization: "True"
      model_path: "/home/michelelagreca/Documents/robotics"

    predefined_planning_pipeline_launch:
      # Planning
      predefined_planning: "zig_zag_plane_narrow_waypoints" #zig_zag_plane_wide_waypoints, zig_zag_plane_narrow_waypoints, zig_zag_curve_waypoints, square_plane_wide_waypoints, square_plane_narrow_waypoints
      # Segmentation
      segmentation_prompt: "tomato" 
      confidence_threshold: "0.002" # for apple: 0.15, for tomato (sim): 0.002. Change to find more accurate instances
      nms_threshold: "0.3" # for apple: 0.7, for tomato (sim): 0.3. Change to find more accurate instances
      # Pipeline
      resolution: '0.006' # for real scenarion better to use at least 0.015, for simulation 0.006
      height_map: "False"
      colored_map: "False"
      color_factor: "0.8"
      filter_ground: 'False'
      filter_speckles: "False"
      ground_filter/distance: "0.04"
      ground_filter/angle: "0.15"
      ground_filter/plane_distance: "0.07"
      compress_map: "True"
      incremental_2D_projection: "False"
      # pointcloud_max_x: "1.1" # represents the world x max positive values that will be considered and inserted into the octomap.
      # pointcloud_min_x: "1.0" # represents the world x min positive values that will be considered and inserted into the octomap.
      # pointcloud_max_y: "1.7" # represents the world y max positive values that will be considered and inserted into the octomap.
      # pointcloud_min_y: "1.6" # represents the world y min positive values that will be considered and inserted into the octomap.
      pointcloud_max_z: "3.00" # represents the world z max positive values that will be considered and inserted into the octomap.
      pointcloud_min_z: "0.10" # represents the world z min positive values that will be considered and inserted into the octomap. Keep -0.28 if the base is used, 0.10 if not. With real robot base, keep at -0.20
      sensor_model/max_range: "-1.0"
      sensor_model/hit: "0.7"
      sensor_model/miss: "0.4"
      sensor_model/min: "0.12"
      sensor_model/max: "0.97"
      color/r: "1.0"
      color/g: "1.0"
      color/b: "1.0"
      color/a: "1.0"
      color_free/r: "0.0"
      color_free/g: "0.0"
      color_free/b: "1.0"
      color_free/a: "1.0"
      process_free_space: "False"
      publish_free_space: "False"
      publish_free_cells: "False"
      publish_octomap_binary: "False"
      publish_octomap_full: "False"
      publish_centers_pointcloud: "False"
      publish_2d_projected_map: "False"
      publish_confidence: 'True'
      publish_semantic: 'True'
      publish_instances: 'True'
      partial_pointcloud_subscription: 'False'
      segmented_pointcloud_subscription: 'False'
      segmented_pointclouds_array_subscription: 'True'
      message_filter_queue: '200'
      insert_cloud_init: 'True'
      insert_segmented_init: 'True'
      segmented_pointcloud_outlier_removal: "True"
      use_frequency_threshold: "False" # useful with real robot
      frequency_threshold: "0.30" # an instance will be put in blank even if only the %threshold/2 overlaps with another portion of the instance
      outlier_detection: "True" # Slow when the full octomap and not partial is used, create more precise instances
      search_neighboorhood_ray: "5"
      correction_neighboorhood_ray: "3"
      outlier_threshold: "0.2"
      weighted_confidence: "True"
      reconstruction_metric: "True" # false for real robot
      ground_truth_path: "/home/michelelagreca/Documents/robotics/active_vision/src/av_bringup/data/octree_tomato_2.bt"
      step_reconstruction_metric_vis: "False"
      # Rviz
      rviz:
        ignition: active_vision_predefined_planning_pipeline_ignition.rviz
        real: active_vision_predefined_planning_pipeline.rviz

    nbv_planning_pipeline_launch:
      # Planning
      candidate_viewpoints_number: "40"
      plane_type_candidate_viewpoints: "square_random" # square, circle, square_random, circle_random
      movement_range: "0.4" # lenght of the portion containing the candidate viewpoints
      # the number of different orinetation that each candidate has. 4 means that the viewpoint is considered with straight orientation but also with 30 degree of angle in up, down, left amd right. 0 means that the viewpoint is considered only oriented straight.
      orientations: "4" # 0: straight, 2: up and down, 4: up, down, left, right
      max_ray_depth: "2.0"
      ray_step_proportion: "1.0" # multiplier to the octomap resolution to define ray generation step during not-attention ray casting. 1 means octomap resolution
      ray_casting_type: "full_attention" # full_attention_distance, full_attention, attention, normal, naive
      central_attention_front_distance_ratio: "4.0" # tune for real robot, 4 for sim
      central_attention_height_distance_ratio: "1.0"
      central_attention_width_distance_ratio: "4.0" # tune for real robot, 4 for sim
      ray_casting_vis: "False"
      utility_type: "expected_semantic_information_gain"
      utility_vis: "False"
      # Segmentation
      segmentation_prompt: "tomato" 
      confidence_threshold: "0.002" # for apple: 0.15, for tomato (sim): 0.002. Change to find more accurate instances
      nms_threshold: "0.3" # for apple: 0.7, for tomato (sim): 0.3. Change to find more accurate instances
      # Pipeline
      resolution: '0.006' # for real scenarion better to use at least 0.015, for simulation 0.006
      height_map: "False"
      colored_map: "False"
      color_factor: "0.8"
      filter_ground: 'False'
      filter_speckles: "False"
      ground_filter/distance: "0.04"
      ground_filter/angle: "0.15"
      ground_filter/plane_distance: "0.07"
      compress_map: "True"
      incremental_2D_projection: "False"
      # pointcloud_max_x: "1.1" # represents the world x max positive values that will be considered and inserted into the octomap.
      # pointcloud_min_x: "1.0" # represents the world x min positive values that will be considered and inserted into the octomap.
      # pointcloud_max_y: "1.7" # represents the world y max positive values that will be considered and inserted into the octomap.
      # pointcloud_min_y: "1.6" # represents the world y min positive values that will be considered and inserted into the octomap.
      pointcloud_max_z: "3.00" # represents the world z max positive values that will be considered and inserted into the octomap.
      pointcloud_min_z: "0.10" # represents the world z min positive values that will be considered and inserted into the octomap. Keep -0.28 if the base is used, 0.10 if not. With real robot base, keep at -0.20
      sensor_model/max_range: "-1.0"
      sensor_model/hit: "0.7"
      sensor_model/miss: "0.4"
      sensor_model/min: "0.12"
      sensor_model/max: "0.97"
      color/r: "1.0"
      color/g: "1.0"
      color/b: "1.0"
      color/a: "1.0"
      color_free/r: "0.0"
      color_free/g: "0.0"
      color_free/b: "1.0"
      color_free/a: "1.0"
      process_free_space: "False"
      publish_free_space: "False"
      publish_free_cells: "False"
      publish_octomap_binary: "False"
      publish_octomap_full: "False"
      publish_centers_pointcloud: "False"
      publish_2d_projected_map: "False"
      publish_confidence: 'True'
      publish_semantic: 'True'
      publish_instances: 'True'
      partial_pointcloud_subscription: 'False'
      segmented_pointcloud_subscription: 'False'
      segmented_pointclouds_array_subscription: 'True'
      message_filter_queue: '200'
      insert_cloud_init: 'True'
      insert_segmented_init: 'True'
      segmented_pointcloud_outlier_removal: "True"
      use_frequency_threshold: "False" # useful with real robot
      frequency_threshold: "0.20" # an instance will be put in blank even if only the %threshold/2 overlaps with another portion of the instance
      outlier_detection: "True" # Slow when the full octomap and not partial is used, create more precise instances
      search_neighboorhood_ray: "5"
      correction_neighboorhood_ray: "3"
      outlier_threshold: "0.15"
      weighted_confidence: "True"
      reconstruction_metric: "True" # false for real robot
      ground_truth_path: "/home/michelelagreca/Documents/robotics/active_vision/src/av_bringup/data/octree_tomato_2.bt"
      step_reconstruction_metric_vis: "False"
      # Rviz
      rviz:
        ignition: active_vision_nbv_planning_pipeline_ignition.rviz
        real: active_vision_nbv_planning_pipeline.rviz